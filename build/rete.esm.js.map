{"version":3,"file":"rete.esm.js","sources":["../src/engine/component.ts","../src/node.ts","../src/component.ts","../src/connection.ts","../src/control.ts","../src/core/emitter.ts","../src/io.ts","../src/input.ts","../src/core/validator.ts","../src/core/context.ts","../src/view/drag.js","../src/view/zoom.js","../src/view/area.ts","../src/view/connection.ts","../src/view/control.ts","../src/view/socket.ts","../src/view/node.ts","../src/view/index.ts","../src/selected.ts","../src/core/events.ts","../src/events.ts","../src/editor.ts","../src/output.ts","../src/socket.ts","../src/engine/recursion.ts","../src/engine/state.ts","../src/engine/events.ts","../src/engine/index.ts","../src/index.ts"],"sourcesContent":["import { Engine } from './index';\nimport { Node } from '../core/data';\n\nexport interface IOs { [key: string]: any }\n\nexport abstract class Component {\n\n    name: string;\n    data = {};\n    engine: Engine | null = null;\n\n    constructor(name: string) {\n        this.name = name;\n    }\n\n    abstract worker(node: Node, inputs: IOs, outputs: IOs, ...args: any): any;\n}","import { Connection } from './connection';\nimport { Control } from './control';\nimport { Input } from './input';\nimport { Node as NodeData } from './core/data';\nimport { Output } from './output';\n\nexport class Node {\n\n    name: string;\n    id: number;\n    position: [number, number] = [0.0, 0.0];\n    inputs = new Map<string, Input>();\n    outputs = new Map<string, Output>();\n    controls = new Map<string, Control>();\n    data: any = {};\n    meta: any = {};\n\n    static latestId = 0;\n    \n    constructor(name: string) {\n        this.name = name;\n        this.id = Node.incrementId();\n    }\n\n    _add(list: Map<string, any>, item: any, prop: string) {\n        if (list.has(item.key))\n            throw new Error(`Item with key '${item.key}' already been added to the node`);\n        if (item[prop] !== null)\n            throw new Error('Item has already been added to some node');\n        \n        item[prop] = this;\n        list.set(item.key, item);\n    }\n\n    addControl(control: Control) {\n        this._add(this.controls, control, 'parent');\n        return this;\n    }\n\n    removeControl(control: Control) {\n        control.parent = null;\n\n        this.controls.delete(control.key);\n    }\n\n    addInput(input: Input) {\n        this._add(this.inputs, input, 'node');\n        return this;\n    }\n\n    removeInput(input: Input) {\n        input.removeConnections();\n        input.node = null;\n\n        this.inputs.delete(input.key);\n    }\n\n    addOutput(output: Output) {\n        this._add(this.outputs, output, 'node');\n        return this;\n    }\n\n    removeOutput(output: Output) {\n        output.removeConnections();\n        output.node = null;\n\n        this.outputs.delete(output.key);\n    }\n\n    getConnections() {\n        const ios = [...this.inputs.values(), ...this.outputs.values()];\n        const connections = ios.reduce((arr, io) => {\n            return [...arr, ...io.connections];\n        }, [] as Connection[]);\n\n        return connections;\n    }\n\n    update() {}\n\n    static incrementId() {\n        if (!this.latestId)\n            this.latestId = 1\n        else\n            this.latestId++\n        return this.latestId\n    }\n\n    static resetId() {\n        this.latestId = 0;\n    }\n\n    toJSON() {\n        const reduceIO = (list: Map<string, Input | Output>) => {\n            return Array.from(list).reduce((obj, [key, io]) => { obj[key] = io.toJSON(); return obj; }, {} as any)\n        }\n\n        return {\n            'id': this.id,\n            'data': this.data,\n            'inputs': reduceIO(this.inputs),\n            'outputs': reduceIO(this.outputs),\n            'position': this.position,\n            'name': this.name\n        }\n    }\n\n    static fromJSON(json: NodeData) {\n        const node = new Node(json.name);\n        const [x, y] = json.position;\n\n        node.id = json.id;\n        node.data = json.data;\n        node.position = [x, y];\n        node.name = json.name;\n        Node.latestId = Math.max(node.id, Node.latestId);\n\n        return node;\n    }\n}\n","import { Component as ComponentWorker } from './engine/component';\nimport { Node } from './node';\n\nexport abstract class Component extends ComponentWorker {\n\n    editor: any = null;\n    data: any = {};\n\n    constructor(name: string) {\n        super(name);\n    }\n\n    abstract async builder(node: Node): Promise<any>;\n\n    async build(node: Node) {\n        await this.builder(node);\n\n        return node;\n    }\n\n    async createNode(data = {}) {\n        const node = new Node(this.name);\n        \n        node.data = data;\n        await this.build(node);\n\n        return node;\n    }\n}","import { Input } from './input';\nimport { Output } from './output';\n\nexport class Connection {\n\n    output: Output;\n    input: Input;\n    data: any = {};\n\n    constructor(output: Output, input: Input) {\n        this.output = output;\n        this.input = input;\n        this.data = {};\n\n        this.input.addConnection(this);\n    }\n\n    remove() {\n        this.input.removeConnection(this);\n        this.output.removeConnection(this);\n    }\n}","import { Input } from './input';\nimport { Node } from './node';\n\nexport class Control {\n\n    key: string;\n    data: any = {};\n    parent: Node | Input | null = null;\n\n    constructor(key: string) {\n        if (this.constructor === Control)\n            throw new TypeError('Can not construct abstract class');\n        if (!key)\n            throw new Error('The key parameter is missing in super() of Control ');\n\n        this.key = key;\n    }\n\n    getNode() {\n        if (this.parent === null)\n            throw new Error('Control isn\\'t added to Node/Input');   \n        \n        if (this.parent instanceof Node)\n            return this.parent;\n            \n        if (!this.parent.node)\n            throw new Error('Control hasn\\'t be added to Input or Node');\n\n        return this.parent.node;\n    }\n\n    getData(key: string) {\n        return this.getNode().data[key];\n    }\n\n    putData(key: string, data: any) {\n        this.getNode().data[key] = data;\n    }  \n}","import { Events } from './events';\n\nexport class Emitter<EventTypes> {\n\n    events: any = {};\n    silent = false;\n\n    constructor(events: Events | Emitter<EventTypes>) {\n        this.events = events instanceof Emitter ? events.events : events.handlers;\n    }\n\n    on<K extends keyof EventTypes>(names: K | K[], handler: (args: EventTypes[K]) => any) {\n        const events = names instanceof Array ? names : (names as string).split(' ');\n\n        (events as string[]).forEach(name => {\n            if (!this.events[name])\n                throw new Error(`The event ${name} does not exist`);\n            this.events[name].push(handler);\n        });\n\n        return this;\n    }\n\n    trigger<K extends keyof EventTypes>(name: K, params: EventTypes[K] | {} = {}) {\n        if (!(name in this.events))\n            throw new Error(`The event ${name} cannot be triggered`);\n\n        return this.events[name].reduce((r: boolean, e: Function) => {\n            return (e(params) !== false) && r\n        }, true); // return false if at least one event is false        \n    }\n\n    bind(name: string) {\n        if (this.events[name])\n            throw new Error(`The event ${name} is already bound`);\n\n        this.events[name] = [];\n    }\n\n    exist(name: string) {\n        return Array.isArray(this.events[name]);\n    }\n}","import { Connection } from './connection';\nimport { Node } from './node';\nimport { Socket } from './socket';\n\nexport class IO {\n\n    node: Node | null = null;\n    multipleConnections: boolean;\n    connections: Connection[] = [];\n   \n    key: string;\n    name: string;\n    socket: Socket;\n\n    constructor(key: string, name: string, socket: Socket, multiConns: boolean) {\n\t    this.node = null;\n        this.multipleConnections = multiConns;\n        this.connections = [];\n\t   \n        this.key = key;\n        this.name = name;\n        this.socket = socket;\n    }\n    \n    removeConnection(connection: Connection) {\n        this.connections.splice(this.connections.indexOf(connection), 1);\n    }\n\n    removeConnections() {\n        this.connections.map(connection => this.removeConnection(connection));\n    }\n}","import { Connection } from './connection';\nimport { Control } from './control';\nimport { IO } from './io';\nimport { Socket } from './socket';\n\nexport class Input extends IO {\n   \n    control: Control | null = null;\n\n    constructor(key: string, title: string, socket: Socket, multiConns: boolean = false) {\n        super(key, title, socket, multiConns);\n    }\n\n    hasConnection() {\n        return this.connections.length > 0;\n    }\n\n    addConnection(connection: Connection) {\n        if (!this.multipleConnections && this.hasConnection())\n            throw new Error('Multiple connections not allowed');\n        this.connections.push(connection);\n    }\n\n    addControl(control: Control) {\n        this.control = control;\n        control.parent = this;\n    }\n\n    showControl() {\n        return !this.hasConnection() && this.control !== null;\n    }\n\n    toJSON() {\n        return {\n            'connections': this.connections.map(c => {\n                return {\n                    node: c.output.node && c.output.node.id,\n                    output: c.output.key,\n                    data: c.data\n                };\n            })\n        };\n    }\n}","import { Data } from './data';\n\nexport class Validator {\n\n    static isValidData(data: Data) {\n        return typeof data.id === 'string' &&\n            this.isValidId(data.id) &&\n            data.nodes instanceof Object && !(data.nodes instanceof Array);\n    }\n\n    static isValidId(id: string) {\n        return /^[\\w-]{3,}@[0-9]+\\.[0-9]+\\.[0-9]+$/.test(id);\n    }\n\n    static validate(id: string, data: Data) {\n        const id1 = id.split('@');\n        const id2 = data.id.split('@');\n        let msg = [];\n\n        if (!this.isValidData(data))\n            msg.push('Data is not suitable'); \n        if (id !== data.id)\n            msg.push('IDs not equal');\n        if (id1[0] !== id2[0])\n            msg.push('Names don\\'t match');\n        if (id1[1] !== id2[1])\n            msg.push('Versions don\\'t match');\n\n        return { success: Boolean(!msg.length), msg: msg.join('. ') };\n    }\n}","import { Component } from '../engine/component';\nimport { Emitter } from './emitter'\nimport { Validator } from './validator'\nimport { EventsTypes as DefaultEvents, Events } from './events';\nimport { Plugin, PluginParams } from './plugin';\n\nexport class Context<EventsTypes> extends Emitter<EventsTypes & DefaultEvents> {\n\n    id: string;\n    plugins: Map<string, any>;\n    components: Map<string, Component>;\n\n    constructor(id: string, events: Events) {\n        super(events);\n\n        if (!Validator.isValidId(id))\n            throw new Error('ID should be valid to name@0.1.0 format');  \n        \n        this.id = id;\n        this.plugins = new Map();\n        this.components = new Map();\n    }\n\n    use<T extends Plugin, O extends PluginParams<T>>(plugin: T, options?: O) {\n        if (plugin.name && this.plugins.has(plugin.name)) throw new Error(`Plugin ${plugin.name} already in use`)\n\n        plugin.install(this, options || {});\n        this.plugins.set(plugin.name, options)\n    }\n\n    register(component: Component) {\n        if (this.components.has(component.name))\n            throw new Error(`Component ${component.name} already registered`);\n\n        this.components.set(component.name, component);\n        this.trigger('componentregister', component);\n    }\n\n    destroy() {\n        this.trigger('destroy');\n    }\n}","export class Drag {\n\n    constructor(el, onTranslate = () => {}, onStart = () => {}, onDrag = () => {}) {\n        this.pointerStart = null;\n\n        this.el = el;\n        this.onTranslate = onTranslate;\n        this.onStart = onStart;\n        this.onDrag = onDrag;\n\n        this.initEvents(el);\n    }\n\n    initEvents(el) {\n        el.style.touchAction = 'none';\n\n        el.addEventListener('pointerdown', this.down.bind(this));\n        window.addEventListener('pointermove', this.move.bind(this));\n        window.addEventListener('pointerup', this.up.bind(this));\n    }\n\n    down(e) {\n        e.stopPropagation();\n        this.pointerStart = [e.pageX, e.pageY]\n\n        this.onStart(e);\n    }\n\n    move(e) {\n        if (!this.pointerStart) return;\n        e.preventDefault();\n\n        let [x, y] = [e.pageX, e.pageY]\n\n        let delta = [x - this.pointerStart[0], y - this.pointerStart[1]];\n\n        let zoom = this.el.getBoundingClientRect().width / this.el.offsetWidth;\n\n        this.onTranslate(delta[0] / zoom, delta[1] / zoom, e);\n    }\n\n    up(e) {\n        if (!this.pointerStart) return;\n        \n        this.pointerStart = null;\n        this.onDrag(e);\n    }\n}","export class Zoom {\n\n    constructor(container, el, intensity, onzoom) {\n        this.el = el;\n        this.intensity = intensity;\n        this.onzoom = onzoom;\n\n        this.distance = null;\n\n        container.addEventListener('wheel', this.wheel.bind(this));\n        container.addEventListener('touchmove', this.move.bind(this));\n        container.addEventListener('touchend', this.end.bind(this));\n        container.addEventListener('touchcancel', this.end.bind(this));\n        container.addEventListener('dblclick', this.dblclick.bind(this));\n    }\n\n    wheel(e) {\n        e.preventDefault();\n        \n        const rect = this.el.getBoundingClientRect();\n        const delta = (e.wheelDelta ? e.wheelDelta / 120 : - e.deltaY / 3) * this.intensity;\n\n        const ox = (rect.left - e.clientX) * delta;\n        const oy = (rect.top - e.clientY) * delta;\n\n        this.onzoom(delta, ox, oy, 'wheel');\n    }\n\n    touches(e) {\n        let [x1, y1] = [e.touches[0].clientX, e.touches[0].clientY];\n\n        let [x2, y2] = [e.touches[1].clientX, e.touches[1].clientY];\n\n        let distance = Math.sqrt(Math.pow(x1 - x2, 2) + Math.pow(y1 - y2, 2));\n\n        return {\n            cx: (x1 + x2)/2,\n            cy: (y1 + y2)/2,\n            distance\n        };\n    }\n\n    move(e) {\n        if (e.touches.length < 2) return;\n        \n        let rect = this.el.getBoundingClientRect();\n\n        let { cx, cy, distance } = this.touches(e);\n\n        if (this.distance !== null) {\n            let delta = distance / this.distance - 1;\n    \n            const ox = (rect.left - cx) * delta;\n            const oy = (rect.top - cy) * delta;\n\n            this.onzoom(delta, ox, oy, 'touch');\n        }\n        this.distance = distance;\n    }\n\n    end() {\n        this.distance = null;\n    }\n\n    dblclick(e) {\n        e.preventDefault();\n        \n        const rect = this.el.getBoundingClientRect();\n        const delta = 4 * this.intensity;\n\n        const ox = (rect.left - e.clientX) * delta;\n        const oy = (rect.top - e.clientY) * delta;\n\n        this.onzoom(delta, ox, oy, 'dblclick'); \n    }\n}","import { Drag } from './drag';\nimport { Emitter } from '../core/emitter';\nimport { EventsTypes } from '../events';\nimport { Zoom } from './zoom';\n\nexport interface Transform { k: number; x: number; y: number }\nexport interface Mouse { x: number; y: number }\nexport type ZoomSource = 'wheel' | 'touch' | 'dblclick';\n\nexport class Area extends Emitter<EventsTypes> {\n\n    el: HTMLElement;\n    container: HTMLElement;\n    transform: Transform = { k: 1, x: 0, y: 0 };\n    mouse: Mouse = { x: 0, y: 0 }\n\n    private _startPosition: any = null\n    private _fragment: DocumentFragment = document.createDocumentFragment();\n    private _appendFlushTimeout: number = 1;\n\n    constructor(container: HTMLElement, emitter: Emitter<EventsTypes>) {\n        super(emitter);\n        \n        const el = this.el = document.createElement('div');\n\n        this.container = container;\n        el.style.transformOrigin = '0 0';\n\n        new Zoom(container, el, 0.1, this.onZoom.bind(this));\n        new Drag(container, this.onTranslate.bind(this) as any, this.onStart.bind(this));\n        this.container.addEventListener('pointermove', this.pointermove.bind(this));\n\n        this.update();\n    }\n\n    update() {\n        const t = this.transform;\n\n        this.el.style.transform = `translate(${t.x}px, ${t.y}px) scale(${t.k})`;\n    }\n\n    pointermove(e: PointerEvent) {\n        const { clientX, clientY } = e;\n        const rect = this.el.getBoundingClientRect();\n        const x = clientX - rect.left;\n        const y = clientY - rect.top;\n        const k = this.transform.k;\n        \n        this.mouse = { x: x / k, y: y / k };\n        this.trigger('mousemove', { ...this.mouse }); // TODO rename on `pointermove`\n    }\n\n    onStart() {\n        this._startPosition = { ...this.transform };\n    }\n\n    onTranslate(dx: number, dy: number) {\n        this.translate(this._startPosition.x + dx, this._startPosition.y + dy)\n    }\n\n    onZoom(delta: number, ox: number, oy: number, source: ZoomSource) {\n        this.zoom(this.transform.k * (1 + delta), ox, oy, source);\n\n        this.update();\n    }\n\n    translate(x: number, y: number) {\n        const params = { transform: this.transform, x, y };\n\n        if (!this.trigger('translate', params)) return;\n\n        this.transform.x = params.x;\n        this.transform.y = params.y;\n\n        this.update();\n        this.trigger('translated');\n    }\n\n    zoom(zoom: number, ox = 0, oy = 0, source: ZoomSource) {\n        const k = this.transform.k;\n        const params = { transform: this.transform, zoom, source };\n\n        if (!this.trigger('zoom', params)) return;\n        \n        const d = (k - params.zoom) / ((k - zoom) || 1);\n\n        this.transform.k = params.zoom || 1;\n        this.transform.x += ox * d;\n        this.transform.y += oy * d;\n\n        this.update();\n        this.trigger('zoomed', { source });\n    }\n\n    appendChild(el: HTMLElement) {\n      this._fragment = this._fragment || document.createDocumentFragment();\n      this._fragment.appendChild(el);\n      clearTimeout(this._appendFlushTimeout);\n      this._appendFlushTimeout = setTimeout(() => {\n        this.el.appendChild(this._fragment);\n        this.trigger('rendered', this.el);\n      });\n    }\n\n    removeChild(el: HTMLElement) {\n        this.el.removeChild(el)\n    }\n}","import { Connection } from '../connection';\nimport { Emitter } from '../core/emitter';\nimport { EventsTypes } from '../events';\nimport { NodeView } from './node';\n\nexport class ConnectionView extends Emitter<EventsTypes> {\n\n    connection: Connection;\n    inputNode: NodeView;\n    outputNode: NodeView;\n    el: HTMLElement;\n\n    constructor(connection: Connection, inputNode: NodeView, outputNode: NodeView, emitter: Emitter<EventsTypes>) {\n        super(emitter);\n        this.connection = connection;\n        this.inputNode = inputNode;\n        this.outputNode = outputNode;\n\n        this.el = document.createElement('div');\n        this.el.style.position = 'absolute';\n        this.el.style.zIndex = '-1';\n\n        this.trigger('renderconnection', { \n            el: this.el, \n            connection: this.connection, \n            points: this.getPoints()\n        });\n    }\n\n    getPoints() {\n        const [x1, y1] = this.outputNode.getSocketPosition(this.connection.output);\n        const [x2, y2] = this.inputNode.getSocketPosition(this.connection.input);\n\n        return [x1, y1, x2, y2];\n    }\n\n    update() {\n        this.trigger('updateconnection', { \n            el: this.el, \n            connection: this.connection, \n            points: this.getPoints()\n        });\n    }\n}","import { Control } from '../control';\nimport { Emitter } from '../core/emitter';\nimport { EventsTypes } from '../events';\n\nexport class ControlView extends Emitter<EventsTypes> {\n\n    constructor(el: HTMLElement, control: Control, emitter: Emitter<EventsTypes>) {\n        super(emitter);\n        this.trigger('rendercontrol', { el, control });\n    }\n}","import { Emitter } from '../core/emitter';\nimport { EventsTypes } from '../events';\nimport { IO } from '../io';\nimport { Node } from '../node';\n\nexport class SocketView extends Emitter<EventsTypes> {\n\n    el: HTMLElement;\n    type: string;\n    io: IO;\n    node: Node;\n\n    constructor(el: HTMLElement, type: string, io: IO, node: Node, emitter: Emitter<EventsTypes>) {\n        super(emitter);\n        this.el = el;\n        this.type = type;\n        this.io = io;\n        this.node = node;\n\n        this.trigger('rendersocket', { el, [type]: this.io, socket: io.socket });\n    }\n\n    getPosition({ position }: { position: number[] }): [number, number] {\n        const el = this.el;\n\n        return [\n            position[0] + el.offsetLeft + el.offsetWidth / 2,\n            position[1] + el.offsetTop + el.offsetHeight / 2\n        ]\n    }\n}","import { Component } from '../engine/component';\nimport { Control } from '../control';\nimport { ControlView } from './control';\nimport { Drag } from './drag';\nimport { Emitter } from '../core/emitter';\nimport { EventsTypes } from '../events';\nimport { IO } from '../io';\nimport { Node } from '../node';\nimport { SocketView } from './socket';\n\nexport class NodeView extends Emitter<EventsTypes> {\n\n    node: Node;\n    component: Component;\n    sockets = new Map<IO, SocketView>();\n    controls = new Map<Control, ControlView>();\n\n    el: HTMLElement;\n    private _startPosition: number[] = [];\n\n    constructor(node: Node, component: Component, emitter: Emitter<EventsTypes>) {\n        super(emitter);\n\n        this.node = node;\n        this.component = component;\n        this.el = document.createElement('div');\n        this.el.style.position = 'absolute';\n\n        this.el.addEventListener('contextmenu', e => this.trigger('contextmenu', { e, node: this.node }));\n\n        new Drag(this.el, this.onTranslate.bind(this) as any, this.onSelect.bind(this) as any, () => {\n            this.trigger('nodedraged', node);\n        });\n\n        this.trigger('rendernode', {\n            el: this.el, \n            node, \n            component: component.data, \n            bindSocket: this.bindSocket.bind(this),\n            bindControl: this.bindControl.bind(this)\n        });\n\n        this.update();\n    }\n\n    clearSockets() {\n        const ios: IO[] = [ ...this.node.inputs.values(), ...this.node.outputs.values()];\n        \n        this.sockets.forEach(s => {\n            if (!ios.includes(s.io)) this.sockets.delete(s.io);\n        });\n    }\n\n    bindSocket(el: HTMLElement, type: string, io: IO) {\n        this.clearSockets();\n        this.sockets.set(io, new SocketView(el, type, io, this.node, this));\n    }\n\n    bindControl(el: HTMLElement, control: Control) {\n        this.controls.set(control, new ControlView(el, control, this));\n    }\n\n    getSocketPosition(io: IO) {\n        const socket = this.sockets.get(io);\n\n        if (!socket) throw new Error(`Socket not fount for ${io.name} with key ${io.key}`);\n\n        return socket.getPosition(this.node);\n    }\n\n    onSelect(e: MouseEvent) {        \n        this.onStart();\n        this.trigger('selectnode', { node: this.node, accumulate: e.ctrlKey });\n    }\n\n    onStart() {\n        this._startPosition = [...this.node.position];\n    }\n\n    onTranslate(dx: number, dy: number) {\n        this.trigger('translatenode', { node: this.node, dx, dy });\n    }\n\n    onDrag(dx: number, dy: number) {\n        const x = this._startPosition[0] + dx;\n        const y = this._startPosition[1] + dy;\n\n        this.translate(x, y);\n    }\n\n    translate(x: number, y: number) {\n        const node = this.node;\n        const params = { node, x, y };\n\n        if (!this.trigger('nodetranslate', params)) return;\n\n        const prev = [...node.position];\n\n        node.position[0] = params.x;\n        node.position[1] = params.y;\n\n        this.update();\n        this.trigger('nodetranslated', { node, prev });\n    }\n\n    update() {\n        const [x, y] = this.node.position;\n\n        this.el.style.transform = `translate(${x}px, ${y}px)`;\n    }\n\n    remove() {\n        \n    }\n}","import { Area } from './area';\nimport { Component } from '../engine/component';\nimport { Connection } from '../connection';\nimport { ConnectionView } from './connection';\nimport { Emitter } from '../core/emitter';\nimport { EventsTypes } from '../events';\nimport { Node } from '../node';\nimport { NodeView } from './node';\n\nexport class EditorView extends Emitter<EventsTypes> {\n\n    container: HTMLElement;\n    components: Map<string, Component>;\n    nodes = new Map<Node, NodeView>();\n    connections = new Map<Connection, ConnectionView>();\n    area: Area;\n\n    constructor(container: HTMLElement, components: Map<string, Component>, emitter: Emitter<EventsTypes>) {\n        super(emitter);\n\n        this.container = container;\n        this.components = components;\n\n        this.container.style.overflow = 'hidden';\n\n        this.container.addEventListener('click', this.click.bind(this));\n        this.container.addEventListener('contextmenu', e => this.trigger('contextmenu', { e, view: this }));\n        window.addEventListener('resize', this.resize.bind(this));\n\n        this.on('nodetranslated', this.updateConnections.bind(this));\n            \n        this.area = new Area(container, this);\n        this.container.appendChild(this.area.el);\n    }\n\n    addNode(node: Node) {\n        const component = this.components.get(node.name);\n\n        if (!component) throw new Error(`Component ${node.name} not found`);\n        \n        const nodeView = new NodeView(node, component, this);\n\n        this.nodes.set(node, nodeView);\n        this.area.appendChild(nodeView.el);\n    }\n\n    removeNode(node: Node) {\n        const nodeView = this.nodes.get(node);\n\n        this.nodes.delete(node);\n        if (nodeView)\n            this.area.removeChild(nodeView.el);\n    }\n\n    addConnection(connection: Connection) {\n        if (!connection.input.node || !connection.output.node)\n            throw new Error('Connection input or output not added to node');\n\n        const viewInput = this.nodes.get(connection.input.node);\n        const viewOutput = this.nodes.get(connection.output.node);\n\n        if (!viewInput || !viewOutput)\n            throw new Error('View node not fount for input or output');\n\n        const connView = new ConnectionView(connection, viewInput, viewOutput, this);\n\n        this.connections.set(connection, connView);\n        this.area.appendChild(connView.el);\n    }\n\n    removeConnection(connection: Connection) {\n        const connView = this.connections.get(connection);\n\n        this.connections.delete(connection);\n        if (connView)\n            this.area.removeChild(connView.el);\n    }\n\n    updateConnections({ node }: { node: Node }) {\n        node.getConnections().map(conn => {\n            let connView = this.connections.get(conn);\n\n            if (!connView) throw new Error('Connection view not found');\n\n            connView.update();\n        });\n    }\n\n    resize() {\n        const { container } = this;\n\n        if (!container.parentElement)\n            throw new Error('Container doesn\\'t have parent element');\n\n        const width = container.parentElement.clientWidth;\n        const height = container.parentElement.clientHeight;\n\n        container.style.width = width + 'px';\n        container.style.height = height + 'px';\n    }\n\n    click(e: Event) {\n        const container = this.container;\n        \n        if (container !== e.target) return;\n        if (!this.trigger('click', { e, container })) return;\n    }\n}\n","import { Node } from './node';\n\nexport class Selected {\n\n    list: Node[] = [];\n\n    add(item: Node, accumulate = false) {\n        if (!accumulate)\n            this.list = [item]; \n        else if (!this.contains(item))\n            this.list.push(item);   \n    }\n\n    clear() {\n        this.list = [];\n    }\n\n    remove(item: Node) {\n        this.list.splice(this.list.indexOf(item), 1);\n    }\n\n    contains(item: Node) {\n        return this.list.indexOf(item) !== -1;\n    }\n\n    each(callback: (n: Node, index: number) => any) {\n        this.list.forEach(callback);\n    }\n}","import { Component } from '../engine/component';\n\nexport class Events {\n\n    handlers: {};\n\n    constructor(handlers: {}) {\n        this.handlers = {\n            warn: [console.warn],\n            error: [console.error],\n            componentregister: [],\n            destroy: [],\n            ...handlers\n        }\n    }\n}\n\nexport interface EventsTypes {\n    warn: string | Error;\n    error: string | Error;\n    componentregister: Component;\n    destroy: void;\n}","import { Component } from './component';\nimport { Connection } from './connection';\nimport { Control } from './control';\nimport { Data } from './core/data';\nimport { EditorView } from './view';\nimport { Events } from './core/events';\nimport { Input } from './input';\nimport { Node } from './node';\nimport { Output } from './output';\nimport { Socket } from './socket';\nimport { Mouse, Transform, ZoomSource } from './view/area';\n\nexport class EditorEvents extends Events {\n\n    constructor() {\n        super({\n            nodecreate: [],\n            nodecreated: [],\n            noderemove: [],\n            noderemoved: [],\n            connectioncreate: [],\n            connectioncreated: [],\n            connectionremove: [],\n            connectionremoved: [],\n            translatenode: [],\n            nodetranslate: [],\n            nodetranslated: [],\n            nodedraged: [],\n            selectnode: [],\n            nodeselect: [],\n            nodeselected: [],\n            rendernode: [],\n            rendersocket: [],\n            rendercontrol: [],\n            renderconnection: [],\n            updateconnection: [],\n            keydown: [],\n            keyup: [],\n            translate: [],\n            translated: [],\n            zoom: [],\n            zoomed: [],\n            click: [],\n            mousemove: [],\n            contextmenu: [],\n            import: [],\n            export: [],\n            process: []\n        });\n    }    \n}\n\nexport interface EventsTypes {\n    componentregister: Component;\n    nodecreate: Node;\n    nodecreated: Node;\n    noderemove: Node;\n    noderemoved: Node;\n    connectioncreate: { input: Input; output: Output };\n    connectioncreated: Connection;\n    connectionremove: Connection;\n    connectionremoved: Connection;\n    translatenode: { node: Node; dx: number; dy: number };\n    nodetranslate: { node: Node; x: number; y: number };\n    nodetranslated: { node: Node; prev: [number, number] };\n    nodedraged: Node;\n    selectnode: {\n        node: Node;\n        accumulate: boolean;\n    };\n    nodeselect: Node;\n    nodeselected: Node;\n    rendernode: {\n        el: HTMLElement;\n        node: Node;\n        component: object;\n        bindSocket: Function;\n        bindControl: Function;\n    };\n    rendersocket: {\n        el: HTMLElement;\n        input?: Input;\n        output?: Output;\n        socket: Socket;\n    };\n    rendercontrol: {\n        el: HTMLElement;\n        control: Control;\n    };\n    renderconnection: {\n        el: HTMLElement;\n        connection: Connection;\n        points: number[];\n    };\n    updateconnection: {\n        el: HTMLElement;\n        connection: Connection;\n        points: number[];\n    };\n    keydown: KeyboardEvent;\n    keyup: KeyboardEvent;\n    translate: {\n        transform: Transform;\n        x: number;\n        y: number;\n    };\n    translated: void;\n    zoom: {\n        transform: Transform;\n        zoom: number;\n        source: ZoomSource;\n    };\n    zoomed: {\n        source: ZoomSource;\n    };\n    click: {\n        e: Event;\n        container: HTMLElement;\n    };\n    mousemove: Mouse;\n    contextmenu: {\n        e: MouseEvent;\n        view?: EditorView;\n        node?: Node;\n    };\n    import: Data;\n    export: Data;\n    process: void;\n    rendered: HTMLElement;\n}\n","import { Component } from './component';\nimport { Connection } from './connection';\nimport { Context } from './core/context';\nimport { Data } from './core/data';\nimport { EditorView } from './view/index';\nimport { Input } from './input';\nimport { Node } from './node';\nimport { Output } from './output';\nimport { Selected } from './selected';\nimport { Validator } from './core/validator';\nimport { EditorEvents, EventsTypes } from './events';\n\nexport class NodeEditor extends Context<EventsTypes> {\n\n    nodes: Node[] = [];\n    selected = new Selected();\n    view: EditorView;\n\n    constructor(id: string, container: HTMLElement) {\n        super(id, new EditorEvents());\n        \n        this.view = new EditorView(container, this.components, this);\n\n        window.addEventListener('keydown', e => this.trigger('keydown', e));\n        window.addEventListener('keyup', e => this.trigger('keyup', e));\n        this.on('selectnode', ({ node, accumulate }) => this.selectNode(node, accumulate));\n        this.on('nodeselected', () => this.selected.each(n => {\n            const nodeView = this.view.nodes.get(n);\n\n            nodeView && nodeView.onStart()\n        }));\n        this.on('translatenode', ({ dx, dy }) => this.selected.each(n => {\n            const nodeView = this.view.nodes.get(n);\n\n            nodeView && nodeView.onDrag(dx, dy)\n        }));\n    }\n\n    addNode(node: Node) {\n        if (!this.trigger('nodecreate', node)) return;\n\n        this.nodes.push(node);\n        this.view.addNode(node);\n        \n        this.trigger('nodecreated', node);\n    }\n\n    removeNode(node: Node) {\n        if (!this.trigger('noderemove', node)) return;\n\n        node.getConnections().forEach(c => this.removeConnection(c));\n\n        this.nodes.splice(this.nodes.indexOf(node), 1);\n        this.view.removeNode(node);\n\n        this.trigger('noderemoved', node);\n    }\n\n    connect(output: Output, input: Input, data = {}) {\n        if (!this.trigger('connectioncreate', { output, input })) return;\n\n        try {\n            const connection = output.connectTo(input);\n\n            connection.data = data;\n            this.view.addConnection(connection);\n\n            this.trigger('connectioncreated', connection);\n        } catch (e) {\n            this.trigger('warn', e)\n        }\n    }\n\n    removeConnection(connection: Connection) {\n        if (!this.trigger('connectionremove', connection)) return;\n            \n        this.view.removeConnection(connection);\n        connection.remove();\n\n        this.trigger('connectionremoved', connection);\n    }\n\n    selectNode(node: Node, accumulate: boolean = false) {\n        if (this.nodes.indexOf(node) === -1) \n            throw new Error('Node not exist in list');\n        \n        if (!this.trigger('nodeselect', node)) return;\n\n        this.selected.add(node, accumulate);\n        \n        this.trigger('nodeselected', node);\n    }\n\n    getComponent(name: string) {\n        const component = this.components.get(name);\n\n        if (!component)\n            throw `Component ${name} not found`;\n        \n        return component as Component;\n    }\n\n    register(component: Component) {\n        super.register(component)\n        component.editor = this;\n    }\n\n    clear() {\n        [...this.nodes].map(node => this.removeNode(node));\n    }\n\n    toJSON() {\n        const data: Data = { id: this.id, nodes: {} };\n        \n        this.nodes.forEach(node => data.nodes[node.id] = node.toJSON());\n        this.trigger('export', data);\n        return data;\n    }\n\n    beforeImport(json: Data) {\n        const checking = Validator.validate(this.id, json);\n        \n        if (!checking.success) {\n            this.trigger('warn', checking.msg);\n            return false;\n        }\n        \n        this.silent = true;\n        this.clear();\n        this.trigger('import', json);\n        return true;\n    }\n\n    afterImport() {\n        this.silent = false;\n        return true;\n    }\n\n    async fromJSON(json: Data) {\n        if (!this.beforeImport(json)) return false;\n        const nodes: any = {};\n\n        try {\n            await Promise.all(Object.keys(json.nodes).map(async id => {\n                const node = json.nodes[id];\n                const component = this.getComponent(node.name);\n\n                nodes[id] = await component.build(Node.fromJSON(node));\n                this.addNode(nodes[id]);\n            }));\n        \n            Object.keys(json.nodes).forEach(id => {\n                const jsonNode = json.nodes[id];\n                const node = nodes[id];\n                \n                Object.keys(jsonNode.outputs).forEach(key => {\n                    const outputJson = jsonNode.outputs[key];\n\n                    outputJson.connections.forEach(jsonConnection => {\n                        const nodeId = jsonConnection.node;\n                        const data = jsonConnection.data;\n                        const targetOutput = node.outputs.get(key);\n                        const targetInput = nodes[nodeId].inputs.get(jsonConnection.input);\n\n                        this.connect(targetOutput, targetInput, data);\n                    });\n                });\n\n            });\n        }\n        catch (e) {\n            this.trigger('warn', e);\n            return !this.afterImport();\n        } finally {\n            return this.afterImport();\n        }\n    }\n}\n","import { Connection } from './connection';\nimport { IO } from './io';\nimport { Input } from './input';\nimport { Socket } from './socket';\n\nexport class Output extends IO {\n  \n    constructor(key: string, title: string, socket: Socket, multiConns: boolean = true) {\n        super(key, title, socket, multiConns);\n    }\n    \n    hasConnection() {\n        return this.connections.length > 0;\n    }\n\n    connectTo(input: Input) {\n        if (!this.socket.compatibleWith(input.socket))\n            throw new Error('Sockets not compatible');\n        if (!input.multipleConnections && input.hasConnection())\n            throw new Error('Input already has one connection');\n        if (!this.multipleConnections && this.hasConnection())\n            throw new Error('Output already has one connection');\n\n        const connection = new Connection(this, input);\n\n        this.connections.push(connection);\n        return connection;\n    }\n\n    connectedTo(input: Input) {\n        return this.connections.some((item) => {\n            return item.input === input;\n        });\n    }\n\n    toJSON() {\n        return {\n            'connections': this.connections.map(c => {\n                return {\n                    node: c.input.node && c.input.node.id,\n                    input: c.input.key,\n                    data: c.data\n                }\n            })\n        };\n    }\n}","export class Socket {\n\n    name: string;\n    data: any;\n    compatible: Socket[] = [];\n\n    constructor(name: string, data = {}) {\n        this.name = name;\n        this.data = data;\n        this.compatible = [];\n    }\n\n    combineWith(socket: Socket) {\n        this.compatible.push(socket);\n    }\n\n    compatibleWith(socket: Socket) {\n        return this === socket || this.compatible.includes(socket);\n    }\n}","import { Node, Nodes } from '../core/data';\n\nfunction intersect(array1: any[], array2: any[]) {\n    return array1.filter(value => -1 !== array2.indexOf(value));\n}\n\nexport class Recursion {\n\n    nodes: Nodes;\n\n    constructor(nodes: Nodes) {\n        this.nodes = nodes;\n    }\n    \n    extractInputNodes(node: Node): Node[] {\n        return Object.keys(node.inputs).reduce((a: any[], key: string) => {\n            const { connections } = node.inputs[key];\n\n            return [...a, ...(connections || []).reduce((b: any[], c: any) => [...b, this.nodes[c.node]], [])]\n        }, []);\n    }\n\n    findSelf(list: any[], inputNodes: Node[]): Node | null {\n        const inters = intersect(list, inputNodes);\n\n        if (inters.length)\n            return inters[0];\n        \n        for (let node of inputNodes) {\n            let l = [node, ...list];\n            let inter = this.findSelf(l, this.extractInputNodes(node));\n\n            if (inter)\n                return inter;\n        }\n\n        return null;\n    }\n\n    detect(): Node | null {\n        const nodesArr = Object.keys(this.nodes).map(id => this.nodes[id]);\n\n        for (let node of nodesArr) {\n            let inters = this.findSelf([node], this.extractInputNodes(node));\n\n            if (inters)\n                return inters;\n        }\n\n        return null;\n    }\n}","export const State = { AVAILABLE: 0, PROCESSED: 1, ABORT: 2 }","import { Events } from '../core/events';\n\nexport class EngineEvents extends Events {\n\n    constructor() {\n        super({});\n    }    \n}\nexport interface EventsTypes {\n}","import { Component } from './component';\nimport { Context } from '../core/context';\nimport { Recursion } from './recursion';\nimport { State } from './state';\nimport { Validator } from '../core/validator';\nimport { Data, Node } from '../core/data';\nimport { EngineEvents, EventsTypes } from './events';\n\nexport { Component, Recursion };\n\ninterface EngineNode extends Node {\n    busy: boolean;\n    unlockPool: any[];\n    outputData: any;\n}\n\nexport class Engine extends Context<EventsTypes> {\n\n    args: any[] = [];\n    data: Data | null = null;\n    state = State.AVAILABLE;\n    onAbort = () => { };\n\n    constructor(id: string) {\n        super(id, new EngineEvents());\n    }\n\n    public clone() {\n        const engine = new Engine(this.id);\n\n        this.components.forEach(c => engine.register(c));\n\n        return engine;\n    }\n\n    async throwError (message: string, data: any = null) {\n        await this.abort();\n        this.trigger('error', { message, data });\n        this.processDone();\n\n        return 'error';\n    }\n\n    private processStart() {\n        if (this.state === State.AVAILABLE) {  \n            this.state = State.PROCESSED;\n            return true;\n        }\n\n        if (this.state === State.ABORT) {\n            return false;\n        }\n\n        console.warn(`The process is busy and has not been restarted.\n                Use abort() to force it to complete`);\n        return false;\n    }\n\n    private processDone() {\n        const success = this.state !== State.ABORT;\n\n        this.state = State.AVAILABLE;\n        \n        if (!success) {\n            this.onAbort();\n            this.onAbort = () => { }\n        }    \n\n        return success;\n    }\n\n    public async abort() {\n        return new Promise(ret => {\n            if (this.state === State.PROCESSED) {\n                this.state = State.ABORT;\n                this.onAbort = ret;\n            }\n            else if (this.state === State.ABORT) {\n                this.onAbort();\n                this.onAbort = ret;\n            }\n            else\n                ret();\n        });\n    }\n\n    private async lock(node: EngineNode) {\n        return new Promise(res => {\n            node.unlockPool = node.unlockPool || [];\n            if (node.busy && !node.outputData)\n                node.unlockPool.push(res);\n            else \n                res();\n            \n            node.busy = true;\n        });    \n    }\n\n    unlock(node: EngineNode) {\n        node.unlockPool.forEach(a => a());\n        node.unlockPool = [];\n        node.busy = false;\n    }\n\n    private async extractInputData(node: Node) {\n        const obj: {[id: string]: any} = {};\n\n        for (let key of Object.keys(node.inputs)) {\n            const input = node.inputs[key];\n            const conns = input.connections;\n            const connData = await Promise.all(conns.map(async (c) => {\n                const prevNode = (this.data as Data).nodes[c.node];\n\n                const outputs = await this.processNode(prevNode as EngineNode);\n\n                if (!outputs) \n                    this.abort();\n                else\n                    return outputs[c.output];\n            }));\n\n            obj[key] = connData;\n        }\n\n        return obj;\n    }\n\n    private async processWorker(node: Node) {\n        const inputData = await this.extractInputData(node);\n        const component = this.components.get(node.name) as Component;\n        const outputData = {};\n\n        try {\n            await component.worker(node, inputData, outputData, ...this.args);\n        } catch (e) {\n            this.abort();\n            this.trigger('warn', e);\n        }\n\n        return outputData;\n    }\n\n    private async processNode(node: EngineNode) {\n        if (this.state === State.ABORT || !node)\n            return null;\n        \n        await this.lock(node);\n\n        if (!node.outputData) {\n            node.outputData = this.processWorker(node)\n        }\n\n        this.unlock(node);\n        return node.outputData;\n    }\n\n    private async forwardProcess(node: Node) {\n        if (this.state === State.ABORT)\n            return null;\n\n        return await Promise.all(Object.keys(node.outputs).map(async (key) => {\n            const output = node.outputs[key];\n            \n            return await Promise.all(output.connections.map(async (c) => {\n                const nextNode = (this.data as Data).nodes[c.node];\n\n                await this.processNode(nextNode as EngineNode);\n                await this.forwardProcess(nextNode);\n            }));\n        }));\n    }\n\n    copy(data: Data) {\n        data = Object.assign({}, data);\n        data.nodes = Object.assign({}, data.nodes);\n        \n        Object.keys(data.nodes).forEach(key => {\n            data.nodes[key] = Object.assign({}, data.nodes[key])\n        });\n        return data;\n    }\n\n    async validate(data: Data) {\n        const checking = Validator.validate(this.id, data);\n        const recursion = new Recursion(data.nodes);\n\n        if (!checking.success)\n            return await this.throwError(checking.msg);  \n        \n        const recurrentNode = recursion.detect();\n\n        if (recurrentNode)\n            return await this.throwError('Recursion detected', recurrentNode);      \n         \n        return true;\n    }\n\n    private async processStartNode(id: string | number | null) {\n        if (!id) return;\n\n        let startNode = (this.data as Data).nodes[id];\n\n        if (!startNode)\n            return await this.throwError('Node with such id not found');   \n        \n        await this.processNode(startNode as EngineNode);\n        await this.forwardProcess(startNode);\n    }\n\n    private async processUnreachable() {\n        const data = this.data as Data;\n\n        for (let i in data.nodes) { // process nodes that have not been reached\n            const node = data.nodes[i] as EngineNode;\n\n            if (typeof node.outputData === 'undefined') {\n                await this.processNode(node);\n                await this.forwardProcess(node);\n            }\n        }\n    }\n\n    async process(data: Data, startId: number | string | null = null, ...args: []) {\n        if (!this.processStart()) return;\n        if (!this.validate(data)) return;    \n        \n        this.data = this.copy(data);\n        this.args = args;\n        \n        await this.processStartNode(startId);\n        await this.processUnreachable();\n        \n        return this.processDone()?'success':'aborted';\n    }\n}","import { Component } from './component';\nimport { Connection } from './connection';\nimport { Control } from './control';\nimport { Emitter } from './core/emitter';\nimport { IO } from './io';\nimport { Input } from './input';\nimport { Node } from './node';\nimport { NodeEditor } from './editor';\nimport { Output } from './output';\nimport { Socket } from './socket';\nimport { Engine, Recursion } from './engine/index';\n\nexport { Engine, Recursion } from './engine/index';\nexport { Component } from './component';\nexport { Control } from './control';\nexport { Connection } from './connection';\nexport { Emitter } from './core/emitter';\nexport { Input } from './input';\nexport { IO } from './io';\nexport { Node } from './node';\nexport { NodeEditor } from './editor';\nexport { Output } from './output';\nexport { Socket } from './socket';\n\nexport default {\n    Engine,\n    Recursion,\n    Component,\n    Control,\n    Connection,\n    Emitter,\n    Input,\n    IO,\n    Node,\n    NodeEditor,\n    Output,\n    Socket\n}"],"names":["Component","name","Node","Map","id","incrementId","list","item","prop","has","key","Error","set","control","_add","controls","parent","input","inputs","removeConnections","node","output","outputs","ios","values","connections","reduce","arr","io","reduceIO","Array","from","obj","toJSON","data","position","latestId","json","x","y","Math","max","builder","build","ComponentWorker","Connection","addConnection","removeConnection","Control","constructor","TypeError","getNode","Emitter","events","handlers","names","handler","split","forEach","push","params","r","e","isArray","IO","socket","multiConns","multipleConnections","connection","splice","indexOf","map","Input","title","length","hasConnection","c","Validator","isValidId","nodes","Object","test","id1","id2","msg","isValidData","success","Boolean","join","Context","plugins","components","plugin","options","install","component","trigger","Drag","el","onTranslate","onStart","onDrag","pointerStart","initEvents","style","touchAction","addEventListener","down","bind","window","move","up","stopPropagation","pageX","pageY","preventDefault","delta","zoom","getBoundingClientRect","width","offsetWidth","Zoom","container","intensity","onzoom","distance","wheel","end","dblclick","rect","wheelDelta","deltaY","ox","left","clientX","oy","top","clientY","touches","x1","y1","x2","y2","sqrt","pow","cx","cy","Area","emitter","k","document","createDocumentFragment","createElement","transformOrigin","onZoom","pointermove","update","t","transform","mouse","_startPosition","dx","dy","translate","source","d","_fragment","appendChild","clearTimeout","_appendFlushTimeout","setTimeout","removeChild","ConnectionView","inputNode","outputNode","zIndex","points","getPoints","getSocketPosition","ControlView","SocketView","type","offsetLeft","offsetTop","offsetHeight","NodeView","onSelect","bindSocket","bindControl","sockets","s","includes","clearSockets","get","getPosition","accumulate","ctrlKey","prev","EditorView","overflow","click","view","resize","on","updateConnections","area","nodeView","viewInput","viewOutput","connView","getConnections","conn","parentElement","clientWidth","height","clientHeight","target","Selected","contains","callback","Events","warn","console","error","componentregister","destroy","EditorEvents","nodecreate","nodecreated","noderemove","noderemoved","connectioncreate","connectioncreated","connectionremove","connectionremoved","translatenode","nodetranslate","nodetranslated","nodedraged","selectnode","nodeselect","nodeselected","rendernode","rendersocket","rendercontrol","renderconnection","updateconnection","keydown","keyup","translated","zoomed","mousemove","contextmenu","process","NodeEditor","selectNode","selected","each","n","addNode","removeNode","connectTo","remove","add","editor","checking","validate","silent","clear","beforeImport","Promise","all","keys","getComponent","fromJSON","jsonNode","outputJson","jsonConnection","nodeId","targetOutput","targetInput","connect","afterImport","Output","compatibleWith","some","Socket","compatible","intersect","array1","array2","filter","value","Recursion","a","b","inputNodes","inters","l","inter","findSelf","extractInputNodes","nodesArr","State","AVAILABLE","PROCESSED","ABORT","EngineEvents","Engine","engine","register","message","abort","processDone","state","onAbort","ret","res","unlockPool","busy","outputData","conns","prevNode","processNode","connData","extractInputData","inputData","worker","args","lock","processWorker","unlock","nextNode","forwardProcess","assign","recursion","throwError","recurrentNode","detect","startNode","i","startId","processStart","copy","processStartNode","processUnreachable"],"mappings":"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"}